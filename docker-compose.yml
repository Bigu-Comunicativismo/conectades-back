version: "3.9"

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: conectades
      POSTGRES_USER: admin_conectades
      POSTGRES_PASSWORD: conectaZ0Z6@
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin_conectades -d conectades"]
      interval: 10s
      timeout: 5s
      retries: 6
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=1GB
      -c effective_cache_size=4GB
      -c work_mem=16MB
      -c maintenance_work_mem=256MB

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: always
    command: >
      redis-server
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
      --timeout 300
      --save 900 1
      --save 300 10
      --save 60 10000
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Application (Uvicorn)
  web:
    build: .
    environment:
      POSTGRES_DB: conectades
      POSTGRES_USER: admin_conectades
      POSTGRES_PASSWORD: conectaZ0Z6@
      REDIS_URL: redis://redis:6379/1
      DJANGO_SETTINGS_MODULE: backend.core.settings
      PYTHONPATH: /app:/app/backend
    command: sh -c "./backend/wait-for-db.sh db && uvicorn backend.core.asgi:application --host 0.0.0.0 --port 8000 --workers 4 --access-log --log-level info"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/docs/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/staticfiles:/var/www/static:ro
      - ./backend/media:/var/www/media:ro
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
