"""
Servi√ßo para envio de emails de verifica√ß√£o
"""
from django.core.mail import send_mail
from django.conf import settings
from .models import CodigoVerificacao


def enviar_codigo_verificacao(email, tipo='cadastro'):
    """
    Envia c√≥digo de verifica√ß√£o por email
    
    Args:
        email (str): Email do destinat√°rio
        tipo (str): Tipo do c√≥digo ('cadastro', 'login', 'recuperacao')
    
    Returns:
        tuple: (sucesso: bool, mensagem: str, codigo_obj: CodigoVerificacao ou None)
    """
    try:
        # Gerar c√≥digo
        codigo_obj = CodigoVerificacao.gerar_codigo(email, tipo)
        
        # Definir assunto e mensagem baseado no tipo
        assuntos = {
            'cadastro': 'üåü Conectades - C√≥digo de Verifica√ß√£o de Cadastro',
            'login': 'üîê Conectades - C√≥digo de Verifica√ß√£o de Login',
            'recuperacao': 'üîë Conectades - C√≥digo de Recupera√ß√£o de Senha'
        }
        
        mensagens = {
            'cadastro': f'''
Ol√°! üëã

Bem-vinda √† plataforma Conectades!

Seu c√≥digo de verifica√ß√£o √©:

    {codigo_obj.codigo}

Este c√≥digo √© v√°lido por 10 minutos e pode ser usado at√© 3 vezes.

Se voc√™ n√£o solicitou este c√≥digo, ignore este email.

---
Conectades - Conectando pessoas e oportunidades
Regi√£o Metropolitana do Recife - PE
            ''',
            'login': f'''
Ol√°! üëã

Seu c√≥digo de verifica√ß√£o para login √©:

    {codigo_obj.codigo}

Este c√≥digo √© v√°lido por 10 minutos e pode ser usado at√© 3 vezes.

Se voc√™ n√£o tentou fazer login, entre em contato conosco imediatamente.

---
Conectades - Conectando pessoas e oportunidades
Regi√£o Metropolitana do Recife - PE
            ''',
            'recuperacao': f'''
Ol√°! üëã

Voc√™ solicitou a recupera√ß√£o de senha.

Seu c√≥digo de verifica√ß√£o √©:

    {codigo_obj.codigo}

Este c√≥digo √© v√°lido por 10 minutos e pode ser usado at√© 3 vezes.

Ap√≥s verificar o c√≥digo, voc√™ poder√° criar uma nova senha.

Se voc√™ n√£o solicitou a recupera√ß√£o de senha, ignore este email.

---
Conectades - Conectando pessoas e oportunidades
Regi√£o Metropolitana do Recife - PE
            '''
        }
        
        assunto = assuntos.get(tipo, assuntos['cadastro'])
        mensagem = mensagens.get(tipo, mensagens['cadastro'])
        
        # Enviar email
        send_mail(
            subject=assunto,
            message=mensagem,
            from_email=settings.DEFAULT_FROM_EMAIL,
            recipient_list=[email],
            fail_silently=False,
        )
        
        return True, f"C√≥digo enviado para {email}", codigo_obj
    
    except Exception as e:
        return False, f"Erro ao enviar email: {str(e)}", None


def verificar_codigo(email, codigo, tipo='cadastro'):
    """
    Verifica se o c√≥digo √© v√°lido
    
    Args:
        email (str): Email do usu√°rio
        codigo (str): C√≥digo de 6 d√≠gitos
        tipo (str): Tipo do c√≥digo
    
    Returns:
        tuple: (valido: bool, mensagem: str, codigo_obj: CodigoVerificacao ou None)
    """
    try:
        # Buscar c√≥digo mais recente
        codigo_obj = CodigoVerificacao.objects.filter(
            email=email,
            codigo=codigo,
            tipo=tipo,
            usado=False
        ).order_by('-data_criacao').first()
        
        if not codigo_obj:
            return False, "C√≥digo inv√°lido ou j√° utilizado", None
        
        # Verificar validade
        valido, mensagem = codigo_obj.esta_valido()
        
        if not valido:
            codigo_obj.incrementar_tentativa()
            return False, mensagem, codigo_obj
        
        # C√≥digo v√°lido
        return True, "C√≥digo verificado com sucesso", codigo_obj
    
    except Exception as e:
        return False, f"Erro ao verificar c√≥digo: {str(e)}", None

