# Generated by Django 5.2.7 on 2025-10-15 02:26

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pessoas', '0003_auto_20251015_0218'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaInteresse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único da categoria (ex: alimentacao, vestuario)', max_length=30, unique=True, verbose_name='Código')),
                ('nome', models.CharField(help_text='Nome exibido da categoria (ex: Alimentação, Vestuário)', max_length=100, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada da categoria', null=True, verbose_name='Descrição')),
                ('icone', models.CharField(blank=True, help_text='Classe CSS do ícone (ex: fas fa-utensils)', max_length=50, null=True, verbose_name='Ícone')),
                ('cor', models.CharField(blank=True, help_text='Cor hexadecimal (ex: #FF5722)', max_length=7, null=True, verbose_name='Cor')),
                ('ativo', models.BooleanField(default=True, help_text='Se esta categoria está disponível para seleção', verbose_name='Ativo')),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição (menor número aparece primeiro)', verbose_name='Ordem')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Categoria de Interesse',
                'verbose_name_plural': 'Categorias de Interesse',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único do gênero (ex: mulher_cis, nao_binario)', max_length=30, unique=True, verbose_name='Código')),
                ('nome', models.CharField(help_text='Nome exibido do gênero (ex: Mulher Cis, Não-binário)', max_length=50, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do gênero/identidade', null=True, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, help_text='Se esta opção está disponível para seleção', verbose_name='Ativo')),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição (menor número aparece primeiro)', verbose_name='Ordem')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Gênero',
                'verbose_name_plural': 'Gêneros',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='TipoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único do tipo (ex: doadora, beneficiaria)', max_length=20, unique=True, verbose_name='Código')),
                ('nome', models.CharField(help_text='Nome exibido do tipo (ex: Doadora, Beneficiária)', max_length=50, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do tipo de usuário', null=True, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, help_text='Se este tipo está disponível para seleção', verbose_name='Ativo')),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição (menor número aparece primeiro)', verbose_name='Ordem')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Tipo de Usuário',
                'verbose_name_plural': 'Tipos de Usuário',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.AlterField(
            model_name='pessoa',
            name='bairro',
            field=models.CharField(help_text='Bairro onde você mora', max_length=100, verbose_name='Bairro'),
        ),
        migrations.RemoveField(
            model_name='pessoa',
            name='categorias_interesse',
        ),
        migrations.AlterField(
            model_name='pessoa',
            name='cidade',
            field=models.CharField(help_text='Cidade onde você mora', max_length=100, verbose_name='Cidade'),
        ),
        migrations.AlterField(
            model_name='pessoa',
            name='cpf',
            field=models.CharField(help_text='CPF no formato XXX.XXX.XXX-XX', max_length=14, unique=True, validators=[django.core.validators.MinLengthValidator(11)], verbose_name='CPF'),
        ),
        migrations.AlterField(
            model_name='pessoa',
            name='email',
            field=models.EmailField(help_text='E-mail para contato', max_length=254, verbose_name='E-mail'),
        ),
        migrations.RemoveField(
            model_name='pessoa',
            name='localizacoes_interesse',
        ),
        migrations.AlterField(
            model_name='pessoa',
            name='nome_completo',
            field=models.CharField(help_text='Nome completo da pessoa', max_length=100, verbose_name='Nome Completo'),
        ),
        migrations.AlterField(
            model_name='pessoa',
            name='telefone',
            field=models.CharField(help_text='Número de telefone com DDD', max_length=20, verbose_name='Telefone'),
        ),
        migrations.AlterField(
            model_name='pessoa',
            name='genero',
            field=models.ForeignKey(help_text='Como você se identifica', on_delete=django.db.models.deletion.PROTECT, to='pessoas.genero', verbose_name='Gênero'),
        ),
        migrations.CreateModel(
            name='LocalizacaoInteresse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('bairro', 'Bairro'), ('cidade', 'Cidade'), ('regiao', 'Região')], default='bairro', help_text='Tipo da localização', max_length=20, verbose_name='Tipo')),
                ('nome', models.CharField(help_text='Nome da localização', max_length=100, verbose_name='Nome')),
                ('codigo', models.CharField(help_text='Código único da localização', max_length=50, verbose_name='Código')),
                ('cidade', models.CharField(blank=True, help_text='Cidade da localização (se for bairro)', max_length=100, null=True, verbose_name='Cidade')),
                ('estado', models.CharField(default='PE', help_text='Estado da localização', max_length=2, verbose_name='Estado')),
                ('ativo', models.BooleanField(default=True, help_text='Se esta localização está disponível para seleção', verbose_name='Ativo')),
                ('ordem', models.PositiveIntegerField(default=0, help_text='Ordem de exibição (menor número aparece primeiro)', verbose_name='Ordem')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Localização de Interesse',
                'verbose_name_plural': 'Localizações de Interesse',
                'ordering': ['estado', 'cidade', 'ordem', 'nome'],
                'unique_together': {('codigo', 'tipo')},
            },
        ),
        migrations.AlterField(
            model_name='pessoa',
            name='tipo_usuario',
            field=models.ForeignKey(help_text='Selecione seu tipo de usuário', on_delete=django.db.models.deletion.PROTECT, to='pessoas.tipousuario', verbose_name='Tipo de Usuário'),
        ),
        migrations.AddField(
            model_name='pessoa',
            name='categorias_interesse',
            field=models.ManyToManyField(help_text='Áreas que você tem interesse', to='pessoas.categoriainteresse', verbose_name='Categorias de Interesse'),
        ),
        migrations.AddField(
            model_name='pessoa',
            name='localizacoes_interesse',
            field=models.ManyToManyField(help_text='Bairros/cidades de interesse', to='pessoas.localizacaointeresse', verbose_name='Localizações de Interesse'),
        ),
    ]
