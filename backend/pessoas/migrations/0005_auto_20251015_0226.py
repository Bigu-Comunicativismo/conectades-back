# Generated by Django 5.2.7 on 2025-10-15 02:26

from django.db import migrations


def populate_initial_data(apps, schema_editor):
    """Popula as tabelas com dados iniciais"""
    TipoUsuario = apps.get_model('pessoas', 'TipoUsuario')
    Genero = apps.get_model('pessoas', 'Genero')
    CategoriaInteresse = apps.get_model('pessoas', 'CategoriaInteresse')
    LocalizacaoInteresse = apps.get_model('pessoas', 'LocalizacaoInteresse')
    
    # Criar tipos de usuário (apenas Beneficiária e Doadora)
    # Organizadora é uma Doadora que tem perfil de organizadora
    tipos_usuario = [
        {'nome': 'Beneficiária', 'ordem': 1},
        {'nome': 'Doadora', 'ordem': 2},
    ]
    
    for tipo in tipos_usuario:
        TipoUsuario.objects.get_or_create(
            nome=tipo['nome'],
            defaults={
                'ordem': tipo['ordem'],
                'ativo': True
            }
        )
    
    # Criar gêneros
    generos = [
        {'nome': 'Mulher Cis', 'ordem': 1},
        {'nome': 'Mulher Trans', 'ordem': 2},
        {'nome': 'Travesti', 'ordem': 3},
        {'nome': 'Homem Cis', 'ordem': 4},
        {'nome': 'Homem Trans', 'ordem': 5},
        {'nome': 'Não-binário', 'ordem': 6},
        {'nome': 'Agênero', 'ordem': 7},
        {'nome': 'Gênero Fluido', 'ordem': 8},
        {'nome': 'Outro', 'ordem': 9},
        {'nome': 'Prefiro não informar', 'ordem': 10},
    ]
    
    for genero in generos:
        Genero.objects.get_or_create(
            nome=genero['nome'],
            defaults={
                'ordem': genero['ordem'],
                'ativo': True
            }
        )
    
    # Criar categorias de interesse
    categorias = [
        {'nome': 'Alimentação', 'ordem': 1},
        {'nome': 'Vestuário', 'ordem': 2},
        {'nome': 'Higiene e Cuidados Pessoais', 'ordem': 3},
        {'nome': 'Educação', 'ordem': 4},
        {'nome': 'Saúde', 'ordem': 5},
        {'nome': 'Jurídico e Direitos', 'ordem': 6},
        {'nome': 'Transporte', 'ordem': 7},
        {'nome': 'Moradia', 'ordem': 8},
        {'nome': 'Trabalho e Emprego', 'ordem': 9},
        {'nome': 'Cultura e Lazer', 'ordem': 10},
        {'nome': 'Outros', 'ordem': 11},
    ]
    
    for categoria in categorias:
        CategoriaInteresse.objects.get_or_create(
            nome=categoria['nome'],
            defaults={
                'ordem': categoria['ordem'],
                'ativo': True
            }
        )
    
    # Criar localizações de interesse (Recife)
    localizacoes = [
        {'nome': 'Boa Viagem', 'tipo': 'bairro', 'cidade': 'Recife', 'ordem': 1},
        {'nome': 'Casa Forte', 'tipo': 'bairro', 'cidade': 'Recife', 'ordem': 2},
        {'nome': 'Graças', 'tipo': 'bairro', 'cidade': 'Recife', 'ordem': 3},
        {'nome': 'Pina', 'tipo': 'bairro', 'cidade': 'Recife', 'ordem': 4},
        {'nome': 'Santo Amaro', 'tipo': 'bairro', 'cidade': 'Recife', 'ordem': 5},
        {'nome': 'Centro', 'tipo': 'bairro', 'cidade': 'Recife', 'ordem': 6},
        {'nome': 'Recife', 'tipo': 'cidade', 'cidade': 'Recife', 'ordem': 7},
        {'nome': 'Olinda', 'tipo': 'cidade', 'cidade': 'Olinda', 'ordem': 8},
        {'nome': 'Jaboatão dos Guararapes', 'tipo': 'cidade', 'cidade': 'Jaboatão dos Guararapes', 'ordem': 9},
    ]
    
    for localizacao in localizacoes:
        # Código simplificado será gerado automaticamente no save() do modelo
        LocalizacaoInteresse.objects.get_or_create(
            nome=localizacao['nome'],
            tipo=localizacao['tipo'],
            cidade=localizacao['cidade'],
            defaults={
                'estado': 'PE',
                'ordem': localizacao['ordem'],
                'ativo': True
            }
        )


def reverse_populate_initial_data(apps, schema_editor):
    """Reverte a população de dados iniciais"""
    TipoUsuario = apps.get_model('pessoas', 'TipoUsuario')
    Genero = apps.get_model('pessoas', 'Genero')
    CategoriaInteresse = apps.get_model('pessoas', 'CategoriaInteresse')
    LocalizacaoInteresse = apps.get_model('pessoas', 'LocalizacaoInteresse')
    
    TipoUsuario.objects.all().delete()
    Genero.objects.all().delete()
    CategoriaInteresse.objects.all().delete()
    LocalizacaoInteresse.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('pessoas', '0004_categoriainteresse_genero_tipousuario_and_more'),
    ]

    operations = [
        migrations.RunPython(populate_initial_data, reverse_populate_initial_data),
    ]